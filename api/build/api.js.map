{"version":3,"sources":["../src/api.js"],"names":["corsOptions","origin","optionsSuccessStatus","app","server","http","Server","use","credentials","err","req","res","next","console","log","json","env","process","IPADDR","IP","PORT","listen","on","close"],"mappings":";;;;;;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;AANA;AAQO,IAAMA,WAAW,GAAG;AACzBC,EAAAA,MAAM,EAAE,uBADiB;AAEzBC,EAAAA,oBAAoB,EAAE;AAFG,CAApB;;AAKP,IAAMC,GAAG,GAAG,0BAAZ;;AACA,IAAMC,MAAM,GAAGC,iBAAKC,MAAL,CAAYH,GAAZ,CAAf,C,CAEA;;;AACAA,GAAG,CAACI,GAAJ,CAAQ,sBAAK;AAAEN,EAAAA,MAAM,EAAE,uBAAV;AAAmCO,EAAAA,WAAW,EAAE;AAAhD,CAAL,CAAR;AACAL,GAAG,CAACI,GAAJ,CAAQ,yBAAR,E,CAEA;;AACA,wBAAWH,MAAX,E,CAEA;;AACAD,GAAG,CAACI,GAAJ,CAAQ,UAAUE,GAAV,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+B;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACAE,EAAAA,GAAG,CAACI,IAAJ,CAAS,cAAT;AACD,CAHD,E,CAKA;;AACA,IAAMC,GAAG,GAAGC,OAAO,CAACD,GAApB;AACA,IAAME,MAAM,GAAGF,GAAG,CAACG,EAAnB;AACA,IAAMC,IAAI,GAAGJ,GAAG,CAACI,IAAJ,IAAY,IAAzB,C,CAEA;;AACAhB,MAAM,CAACiB,MAAP,CAAc,IAAd,EAAoB;AAAA,SAClBR,OAAO,CAACC,GAAR,CAAY,6CAAZ,CADkB;AAAA,CAApB;AAIAV,MAAM,CAACkB,EAAP,CAAU,OAAV,EAAmB,YAAW;AAC5BT,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,CAFD;AAIAG,OAAO,CAACK,EAAR,CAAW,QAAX,EAAqB,YAAW;AAC9BlB,EAAAA,MAAM,CAACmB,KAAP;AACD,CAFD,E,CAIA;;eACepB,G","sourcesContent":["// Main variables\r\nimport express from 'express'\r\nimport http from 'http'\r\n\r\nimport cors from 'cors'\r\nimport helmet from 'helmet'\r\nimport {initSocket} from './socket'\r\n\r\nexport const corsOptions = {\r\n  origin: 'http://localhost:8080',\r\n  optionsSuccessStatus: 200\r\n}\r\n\r\nconst app = express()\r\nconst server = http.Server(app)\r\n\r\n//Configuration\r\napp.use(cors({ origin: 'http://localhost:8080', credentials: true }))\r\napp.use(helmet())\r\n\r\n// Web Sockets Configuration\r\ninitSocket(server)\r\n\r\n// Error handler\r\napp.use(function (err, req, res, next) {\r\n  console.log(err)\r\n  res.json('Server Error')\r\n})\r\n\r\n// Environment Configuration\r\nconst env = process.env\r\nconst IPADDR = env.IP\r\nconst PORT = env.PORT || 5000\r\n\r\n// Run App\r\nserver.listen(5000, () =>\r\n  console.log('Server is currently running at port 5000...')\r\n)\r\n\r\nserver.on('close', function() {\r\n  console.log(' Stopping ...')\r\n})\r\n\r\nprocess.on('SIGINT', function() {\r\n  server.close()\r\n})\r\n\r\n//Test export\r\nexport default app"],"file":"api.js"}